#!/usr/bin/env bash

ESLINT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )/../eslint" && pwd )"
BIN_NAME=$( basename "$0" )
COMMAND_NAME="$1"
ESLINT=".eslintrc.json"
ESLINT_REACT=".eslintrc-react.json"

BOLD="\033[1m"
RESET="\033[0m"

WHITE="\033[1;37m"
RED="\033[0;31m";
GREEN="\033[0;32m"
YELLOW="\033[0;33m"
BLUE="\033[0;34m"

info() {
  printf "\r[ ${YELLOW}!!${RESET} ] $1\n";
}

user() {
  printf "\r[ ${BLUE}..${RESET} ] $1\n";
}

success() {
  echo "";
  printf "\r[ ${GREEN}OK${RESET} ] $1\n";
  echo "";
}

fail() {
  echo "";
  printf "\r[${RED}FAIL${RESET}] $1\n";
  echo "";
  exit 1;
}

sub_help() {
  echo "Usage: $BIN_NAME <command>"
  echo
  echo "Commands:"
  echo "   --help        This help message"
  echo "   --init        Initialize project"
  echo "   --std         Install Standard"
  echo "   --react       Install React dependencies"
  echo
}

sub_init() {
  user "Initializing JS project...";
  yarn init
}

sub_std() {

  if [ ! -f "${PWD}/${ESLINT}" ] || ! cmp --silent "${ESLINT_DIR}/${ESLINT}" "${PWD}/${ESLINT}"; then
    cp "${ESLINT_DIR}/${ESLINT}" "${PWD}/${ESLINT}" && success "'$ESLINT' has been copied." || fail "Copy of '$ESLINT' has failed.";
  else
    fail "'$ESLINT' already exists and has not changed (not copied).";
  fi;

  yarn \
  add --dev \
  eslint \
  eslint-config-standard \
  eslint-plugin-standard \
  eslint-plugin-promise
}

sub_react() {

  if [ ! -f "${PWD}/${ESLINT}" ] || ! cmp --silent "${ESLINT_DIR}/${ESLINT_REACT}" "${PWD}/${ESLINT}"; then
    cp "${ESLINT_DIR}/${ESLINT_REACT}" "${PWD}/${ESLINT}" && success "'$ESLINT_REACT' has been copied." || fail "Copy of '$ESLINT_REACT' has failed.";
  else
    fail "'$ESLINT' already exists and has not changed (not copied).";
  fi;

  yarn \
  add --dev \
  eslint \
  eslint-config-standard \
  eslint-config-standard-jsx \
  eslint-plugin-standard \
  eslint-plugin-react \
  eslint-plugin-promise
}

case $COMMAND_NAME in
  "" | "-h" | "--help")
    sub_help;
    ;;
  *)
    CMD=${COMMAND_NAME/*-/}
    sub_${CMD} 2>/dev/null;
    if [ $? = 127 ]; then
      fail "'$CMD' is not a known command or has errors." >&2;
    fi;
    ;;
esac
